{
  "telemetry": {
    "serviceName": "TELEMETRY_SERVICE_NAME",
    "hostname": "TELEMETRY_HOST_NAME",
    "version": "TELEMETRY_SERVICE_VERSION",
    "logger": {
      "level": "LOG_LEVEL",
      "prettyPrint": {
        "__name": "LOG_PRETTY_PRINT_ENABLED",
        "__format": "boolean"
      }
    },
    "tracing": {
      "enabled": "TELEMETRY_TRACING_ENABLED",
      "url": "TELEMETRY_TRACING_URL"
    },
    "metrics": {
      "enabled": "TELEMETRY_METRICS_ENABLED",
      "url": "TELEMETRY_METRICS_URL",
      "interval": "TELEMETRY_METRICS_INTERVAL"
    }
  },
  "server": {
    "port": "SERVER_PORT",
    "request": {
      "payload": {
        "limit": "REQUEST_PAYLOAD_LIMIT"
      }
    },
    "response": {
      "compression": {
        "enabled": {
          "__name": "RESPONSE_COMPRESSION_ENABLED",
          "__format": "boolean"
        }
      }
    }
  },
  "jobManagement": {
    "config": {
      "jobManagerBaseUrl": "JOB_MANAGER_BASE_URL",
      "heartbeat": {
        "baseUrl": "HEARTBEAT_BASE_URL",
        "intervalMs": "HEARTBEAT_INTERVAL_MS"
      },
      "jobTracker": {
        "baseUrl": "JOB_TRACKER_BASE_URL"
      },
      "dequeueIntervalMs": "DEQUEUE_INTERVAL_MS"
    }
  },
  "polygonPartsManager": {
    "baseUrl": "POLYGON_PARTS_MANAGER_BASE_URL"
  },
  "gpkgsLocation": "GPKGS_LOCATION",
  "geoserver": {
    "baseUrl": "GEOSERVER_BASE_URL"
  },
  "jobDefinitions": {
    "tasks": {
      "maxAttempts": {
        "__name": "MAX_ATTEMPTS",
        "__format": "number"
      },
      "polygonParts": {
        "type": "POLYGON_PARTS_TASK_TYPE"
      }
    },
    "jobs": {
      "new": {
        "type": "INGESTION_NEW_JOB_TYPE"
      },
      "update": {
        "type": "INGESTION_UPDATE_JOB_TYPE"
      },
      "swapUpdate": {
        "type": "INGESTION_SWAP_UPDATE_JOB_TYPE"
      },
      "export": {
        "type": "EXPORT_JOB_TYPE"
      }
    }
  },
  "httpRetry": {
    "attempts": {
      "__name": "HTTP_RETRY_ATTEMPTS",
      "__format": "number"
    },
    "delay": "HTTP_RETRY_DELAY",
    "shouldResetTimeout": {
      "__name": "HTTP_RETRY_RESET_TIMEOUT",
      "__format": "boolean"
    }
  },
  "disableHttpClientLogs": {
    "__name": "DISABLE_HTTP_CLIENT_LOGS",
    "__format": "boolean"
  }
}
