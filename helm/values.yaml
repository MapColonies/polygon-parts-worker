global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: ''
  jobDefinitions: {}
  serviceUrls: {}
  storage: {}

jobDefinitions:
  jobs:
    new:
      type: ""
    update:
      type: ""
    swapUpdate:
      type: ""
    export: 
      type: ""
  tasks:
    maxAttempts: 3
    polygonParts:
      type: ""

serviceUrls:
  jobManager: ""
  heartbeatManager: ""
  polygonPartsManager: ""
  jobTracker: ""

storage:
  fs: 
    internalPvc:
      name: ""
      gpkgSubPath: ""
      outputPath: ""

cloudProvider:
  dockerRegistryUrl: 'my-registry-url.io'
  imagePullSecretName: 'my-registry-secret'
  flavor: openshift

tracing:
  enabled: false
  url: ""
metrics:
  enabled: false
  url: ""
  prometheus:
    scrape: false

enabled: true
environment: development
replicaCount: 1
revisionHistoryLimit: 5 # Amount of revisions we keep
nodePort: 30030 #for minikube deployment only
resetOnConfigChange: false

nameOverride: ""
fullnameOverride: ""

livenessProbe:
  enabled: true
  initialDelaySeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  path: /liveness

readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  path: /liveness

podAnnotations: {}

extraVolumes: []

extraVolumeMounts: []

extraEnvVars: []

command: []
args: []
# command: [ "/bin/sh", "-c", "--" ]
# args: [ "while true; do sleep infinity; done;" ]

sidecars: []

caSecretName: ''
caPath: '/usr/local/share/ca-certificates'
caKey: 'ca.crt'

image:
  registry: ""
  repository: polygon-parts-worker
  tag: 'latest'
  pullPolicy: IfNotPresent
env:
  port: 8080
  targetPort: 8080
  protocol: TCP
  logLevel: info
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  requestPayloadLimit: 1mb
  disableHttpClientLogs: false     
  httpRetry:
    attempts: 5
    delay: exponential
    resetTimeout: true
  jobManagement:
    config:
      dequeueIntervalMs: 3000
      heartBeat:
        intervalMs: 3000

resources:
  enabled: true
  value:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

route:
  enabled: true
  path: /
  host: 
  timeout:
    enabled: false # defaults to 30s by openshift
    duration: 60s # supported units (us, ms, s, m, h, d)
  rewriteTarget: ''
  tls:
    enabled: true
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
    useCerts: false
    certificate: ''
    key: ''
    caCertificate: ''

ingress:
  enabled: false
  path: /
  host: 'localhost'
  cors:
    enabled: true
    origin: '*'
